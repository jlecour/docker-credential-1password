#!/bin/bash

export DOCKER_CREDENTIAL_1PASSWORD_VAULT="test-$(date +'%Y-%m-%dT%H:%M:%S')-$(openssl rand -hex 2)"
export _TEST_PASSWORD="$(openssl passwd -6 $DOCKER_CREDENTIAL_1PASSWORD_VAULT)"


err_report() {
    echo "Error on line $1"
}

trap 'err_report $LINENO' ERR


function remove_all_credentials {
	docker-credential-1password list | jq -r '.|to_entries|map(.key)|.[]' | sed -e 's~https://~~'
}


CREDENTIALS=$(cat <<!
{"ServerURL": "example.com", "Username": "myusername", "Secret": "$_TEST_PASSWORD"}
!
)


function test_no_vault_operations {
	echo "INFO: list credentials from non existing vault">&2
	result=$(docker-credential-1password list)
	test $? -eq 0 && test "$result" == "{}" || (echo "ERROR: list credentials failed">&2 && exit 1)

	echo "INFO: erase credential from non existing vault">&2
	result=$(docker-credential-1password erase <<< example.com)
	test $? -eq 0 && test "$result" == "" || (echo "ERROR: erase credentials failed">&2 && exit 1)

	echo "INFO: get credential from non existing vault">&2
	result=$(docker-credential-1password get <<< example.com)
	test $? -eq 0 && test "$result" == "" || (echo "ERROR: get credentials failed">&2 && exit 1)

	echo "INFO: store credential in non existing vault">&2
	result=$(docker-credential-1password store <<< "$CREDENTIALS")
	test $? -eq 0 && test "$result" == "" || (echo "ERROR: store credentials failed">&2 && exit 1)

	count=$(op item list --vault "$DOCKER_CREDENTIAL_1PASSWORD_VAULT" --format json | jq -r 'map(select(.title == "example.com")|.)|length')
	test $count -eq 1 || (echo "ERROR: list credentials failed expected 1, got $count">&2 && exit 1)

	op vault delete "$DOCKER_CREDENTIAL_1PASSWORD_VAULT"
}

function test_vault_operations {
	echo "INFO: create vault $DOCKER_CREDENTIAL_1PASSWORD_VAULT">&2
	op vault create "$DOCKER_CREDENTIAL_1PASSWORD_VAULT" > /dev/null 

	echo "INFO: store credential in vault">&2
	result=$(docker-credential-1password store <<< "$CREDENTIALS")
	test $? -eq 0 && test "$result" == "$CREDENTIALS"

	echo "INFO: list credentials in existing vault">&2
	result=$(docker-credential-1password list)
	test $? -eq 0 && test "$result" == '{"example.com": "myusername"}'

	echo "INFO: get credential from existing vault">&2
	result=$(docker-credential-1password get <<< example.com)
	test $? -eq 0 && test "$result" = "$CREDENTIALS"

	echo "INFO: erase credential from existing vault">&2
	result=$(docker-credential-1password erase <<< example.com)
	test $? -eq 0 && test "$result" == ""

	count=$(op item list --vault "$DOCKER_CREDENTIAL_1PASSWORD_VAULT" --format json | jq -r 'map(select(.title == "example.com")|.)|length')
	test $count -eq 0

	op vault delete "$DOCKER_CREDENTIAL_1PASSWORD_VAULT"
}

function test_multiple_credentials {
	op vault create "$DOCKER_CREDENTIAL_1PASSWORD_VAULT" > /dev/null

	for c in {1..10}; do
		echo "INFO: create credential example-$c.com">&2
		result=$(docker-credential-1password store <<!
{"ServerURL": "example-$c.com", "Username": "user-$c", "Secret": "password-$c"}
!
)
	done
	count=$(op item list --vault "$DOCKER_CREDENTIAL_1PASSWORD_VAULT" --format json | jq -r 'map(select(.title |startswith("example-"))|.)|length')
	test $count -eq $c || (echo "ERROR: expected $c credentials, got $count" && exit 1)

	for c in {5..8}; do
		echo "INFO: retrieve credential example-$c.com">&2
		result=$(docker-credential-1password get <<< example-$c.com | jq -c .)
		expect="{\"ServerURL\":\"example-$c.com\",\"Username\":\"user-$c\",\"Secret\":\"password-$c\"}" 
		test "$result" == "$expect" || (echo "ERROR: expected $expect, got $result">&2 && exit 1)
	done

	for c in {5..6}; do
		echo "INFO: updating credential example-$c.com">&2
		expect="{\"ServerURL\":\"example-$c.com\",\"Username\":\"user-$c\",\"Secret\":\"NewPassword-$c\"}" 
		docker-credential-1password store <<< "$expect"
		result=$(docker-credential-1password get <<< example-$c.com | jq -c .)
		test "$result" == "$expect" || (echo "ERROR: expected $expect after update, got $result">&2 && exit 1)
	done

	for c in {1..2}; do
		echo "INFO: deleting credential example-$c.com">&2
		docker-credential-1password erase <<< example-$c.com
		result=$(docker-credential-1password get <<< example-$c.com)
		test $? -eq 1 && test "$result" == "" || (echo "ERROR: delete of example-$c.com failed">&2 && exit 1)
		count=$(($count - 1))
	done

	new_count=$(op item list --vault "$DOCKER_CREDENTIAL_1PASSWORD_VAULT" --format json | jq -r 'map(select(.title |startswith("example-"))|.)|length')
	test $count -eq $new_count || (echo "ERROR: expected $new_count credentials, got $count" && exit 1)

	op vault delete "$DOCKER_CREDENTIAL_1PASSWORD_VAULT"
}


function main {
  ROOT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd )
  echo $ROOT_DIR
  export PATH=$ROOT_DIR/bash:$PATH

	test_no_vault_operations
	test_vault_operations
	test_multiple_credentials
}

main
